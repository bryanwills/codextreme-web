---
// Selector de fondo compacto para el header
import { useTranslations } from '../i18n/utils';

const t = useTranslations(Astro.currentLocale as 'es' | 'en' ?? 'es');
---

<div class="relative group">
  <button
    id="background-toggle"
    class="p-2 rounded-lg bg-gradient-to-br from-[#FF6F61] to-[#6B5B95] hover:from-[#FF8C78] hover:to-[#8B7CB0] transition-all duration-300 relative group shadow-md hover:shadow-lg"
    aria-label={t('background.toggle')}
  >
    <div class="flex items-center justify-center w-6 h-6">
      <span id="background-icon" class="text-lg transition-transform duration-300">ðŸŽ¨</span>
    </div>
    <span
      class="absolute -top-8 left-1/2 -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded-md opacity-0 group-hover:opacity-100 transition-opacity duration-200 shadow-md"
    >
      {t('background.toggle')}
    </span>
  </button>

  <div
    class="absolute right-0 top-full mt-2 w-40 bg-white text-black dark:bg-gray-900 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 border border-gray-200 dark:border-gray-700"
  >
    <div class="py-2">
      <button 
        data-background="particles" 
        class="bg-option w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors dark:text-white flex items-center active"
      >
        <span class="mr-2">âœ¨</span> {t('background.particles')}
      </button>
      
      <button 
        data-background="nebula" 
        class="bg-option w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors dark:text-white flex items-center"
      >
        <span class="mr-2">ðŸŒŒ</span> {t('background.nebula')}
      </button>
      
      <button 
        data-background="crystal" 
        class="bg-option w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors dark:text-white flex items-center"
      >
        <span class="mr-2">ðŸ’Ž</span> {t('background.crystal')}
      </button>
      
      <button 
        data-background="none" 
        class="bg-option w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors dark:text-white flex items-center"
      >
        <span class="mr-2">ðŸš«</span> {t('background.none')}
      </button>
    </div>
  </div>
</div>

<!-- Traducciones para JavaScript -->
<script is:inline define:vars={{
  backgroundTranslations: {
    particles: t('background.particles'),
    crystal: t('background.crystal'),
    nebula: t('background.nebula'),
    none: t('background.none'),
    notification: t('background.notification')
  }
}}>
  window.backgroundTranslations = backgroundTranslations;
</script>

<style>
  .bg-option.active {
    background-color: rgba(107, 91, 149, 0.1);
    border-left: 3px solid #6B5B95;
  }
  
  .bg-option.active span:first-child {
    filter: brightness(1.3);
  }
</style>

<script is:inline>
  function initCompactBackgroundSelector() {
    const buttons = document.querySelectorAll('.bg-option');
    const saved = localStorage.getItem('codextreme-background') || 'particles';
    const backgroundIcon = document.getElementById('background-icon');
    
    // Iconos para cada tipo de fondo
    const backgroundIcons = {
      'particles': 'âœ¨',
      'nebula': 'ðŸŒŒ', 
      'crystal': 'ðŸ’Ž',
      'none': 'ðŸš«'
    };
    
    // Actualizar icono del botÃ³n principal
    if (backgroundIcon) {
      backgroundIcon.textContent = backgroundIcons[saved] || 'ðŸŽ¨';
    }
    
    // Marcar botÃ³n activo
    buttons.forEach(btn => {
      btn.classList.remove('active');
      if (btn.getAttribute('data-background') === saved) {
        btn.classList.add('active');
      }
    });
    
    // Agregar eventos
    buttons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const type = this.getAttribute('data-background');
        localStorage.setItem('codextreme-background', type);
        
        // Actualizar icono inmediatamente
        if (backgroundIcon) {
          backgroundIcon.textContent = backgroundIcons[type] || 'ðŸŽ¨';
        }
        
        // NotificaciÃ³n
        const translations = window.backgroundTranslations || {};
        const backgroundName = translations[type] || this.textContent.trim();
        const notificationText = translations.notification || 'Fondo cambiado a';
        
        const notif = document.createElement('div');
        notif.className = 'fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-purple-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 text-sm';
        notif.textContent = `ðŸŽ¨ ${notificationText}: ${backgroundName}`;
        document.body.appendChild(notif);
        
        setTimeout(() => {
          notif.style.opacity = '0';
          notif.style.transform = 'translate(-50%, 20px)';
          notif.style.transition = 'all 0.3s ease';
          setTimeout(() => notif.remove(), 300);
        }, 1500);
        
        setTimeout(() => window.location.reload(), 800);
      });
    });
  }
  
  // Inicializar
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initCompactBackgroundSelector);
  } else {
    initCompactBackgroundSelector();
  }
</script>
